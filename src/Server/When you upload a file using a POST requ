When you upload a file using a POST request and submit additional form data such as name and age, the Common Gateway Interface (CGI) script handling the request will receive this information in the environment variables. In particular, the uploaded file and form data will be available in the environ dictionary passed to the CGI script. Here are some of the key environment variables related to file uploads and form data:

REQUEST_METHOD: It will be set to "POST" to indicate that the form is being submitted via a POST request.

CONTENT_TYPE: This variable will indicate the type of content being sent. For file uploads, it is typically set to "multipart/form-data".

CONTENT_LENGTH: It represents the length (in bytes) of the request body.

QUERY_STRING: If you are submitting data as part of the URL (e.g., using a GET request), this variable will contain that data.

HTTP_COOKIE: If there are cookies sent with the request, they will be available in this variable.

HTTP_USER_AGENT: It contains information about the user agent (browser) making the request.

REMOTE_ADDR: It provides the IP address of the client.

REMOTE_PORT: It specifies the port number on the client machine.

For form data and file uploads, you would typically find the relevant information in the request body, which is read from the standard input (stdin). The format for file uploads is usually "multipart/form-data", and the CGI script needs to parse this data to extract information about the uploaded file and form fields.

For example, the uploaded file data can be accessed from stdin, and the form fields can be parsed using a library or by manually parsing the data. The popular programming language Python has a module called cgi that can be used for handling such requests.

It's important to note that handling file uploads securely can be complex, and you should consider using established frameworks or libraries that provide robust solutions for processing form data and file uploads, such as Flask or Django for Python, or Express for Node.js.